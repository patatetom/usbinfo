#!/bin/bash
# regdump -t SYSTEM > SYSTEM.dump && usbinfo SYSTEM.dump
# https://github.com/adoxa/regdump


exit_error() { [ "${2:-}" ] && echo $2 > /dev/stderr; exit ${1:-1}; }
get_value() { read stdin; echo ${stdin##* = }; }


#ids=/var/lib/usbutils/usb.ids	# on Debian, provided by package "usb.ids"
#ids=/usr/share/hwdata/usb.ids	# on Arch, provided by package "hwids"
[ -s "${ids:?$'\r'File usb.ids not defined$'\033[K'}" ] || exit_error 1 "Bad usb.ids file"
registry=${1:?$'\r'SYSTEM registry dump needed$'\033[K'}
[ -s "$registry" ] || exit_error 1 "Non-existent or empty registry dump"


# Current ControlSet
read Current _ < <( grep -m1 '/Select/Current ' $registry | get_value )
[ "$Current" ] && [ $((Current)) -gt 0 ] || Current=1
Current=000$((Current))
ControlSet=ControlSet${Current: -3}


# node reduction
registry=$( mktemp )
registry=${registry:?$'\r'Error with temporay file$'\033[K'}
trap "rm -f $registry" EXIT
egrep '^\[.+/('$ControlSet'/Enum|MountedDevices)/.+ = .+' "$1" > $registry
[ -s $registry ] || exit_error 1 "Searched nodes not found"
# encoding correction (fr)
sed -i -e 's/<E0>/à/g' -e 's/<E9>/é/g' $registry


# USB storage
while read UsbStorage
do

Serial=${UsbStorage##*/}

FirstTime=$( egrep "/$Serial/|#$Serial#" $registry | sort | head -1 )
FirstTime=${FirstTime:1:19}

DeviceDesc=$( grep -m1 "$UsbStorage/DeviceDesc" $registry )
LastTime=${DeviceDesc:1:19}
DeviceDesc=${DeviceDesc##* = }
DeviceDesc=${DeviceDesc##*;}

FriendlyName=$( grep -m1 "$UsbStorage/FriendlyName" $registry | get_value )

DosDevice=$( grep "/MountedDevices/" $registry | grep "$Serial" | grep -om1 'DosDevices\\.:')
DosDevice=${DosDevice: -2}

UsbStorage=${UsbStorage%/*}
UsbStorage=${UsbStorage##*/}
UsbStorage=${UsbStorage%&Rev_*}
UsbStorage=${UsbStorage//&/ }
UsbStorage=${UsbStorage//Ven_/}
UsbStorage=${UsbStorage//Prod_/}

echo $LastTime\
$'\t'$UsbStorage\
$'\t'$Serial\
$'\t'$FirstTime\
$'\t'$DeviceDesc\
$'\t'$FriendlyName\
$'\t'$DosDevice

done < <( egrep -o "$ControlSet/Enum/USBSTOR/[^/]+/[^/]+" $registry | sort -u )


# USB Vid Pid
Vid_Pid()
{
	VidPidsList=$( egrep ^$'\t''?[0-9a-f]{4} ' "$ids" | grep -iA100000 ^$1 | grep -B100000 -m2 '^[^'$'\t'']' | head -n -1 )
	[ ! "$VidPidsList" ] && echo "VendorId $1 - ProductId $2" && return
	Vendor=${VidPidsList%%$'\n'$'\t'*}
	Vendor=${Vendor:4}
	Product=$( grep -im1 ^$'\t'$2 <<<"$VidPidsList" )
	[ ! "$Product" ] && echo ${Vendor} - ProductId $2 && return
	Product=${Product:5}
	echo $Vendor - $Product
}
while read VidPid
do

Serial=${VidPid##*/}

FirstTime=$( egrep "/$Serial/|#$Serial#" $registry | sort | head -1 )
FirstTime=${FirstTime:1:19}

DeviceDesc=$( grep -m1 "$VidPid/DeviceDesc" $registry )
LastTime=${DeviceDesc:1:19}
DeviceDesc=${DeviceDesc##* = }
DeviceDesc=${DeviceDesc##*;}

FriendlyName=$( grep -m1 "$VidPid/FriendlyName" $registry | get_value )

VidPid=${VidPid%/*}
VidPid=${VidPid##*/}

Vid=${VidPid:4:4}
Pid=${VidPid:13:4}

VidPid=$( Vid_Pid $Vid $Pid )

echo $LastTime\
$'\t'$VidPid\
$'\t'$Serial\
$'\t'$FirstTime\
$'\t'$DeviceDesc\
$'\t'$FriendlyName\

done < <( egrep -o "$ControlSet/Enum/USB/VID_[^/]+/[^/]+" $registry | sort -u )

