#!/bin/bash
# regdump -t SYSTEM > SYSTEM.dump && usbinfo SYSTEM.dump
# https://github.com/adoxa/regdump


exit_error() { [ "${2:-}" ] && echo $2 > /dev/stderr; exit ${1:-1}; }
get_value() { read stdin; echo ${stdin##*=}; }
#dump() { [ "$1" ] && echo "$@" >/dev/stderr; }


registry=${1:?$'\r'SYSTEM registry dump needed$'\033[K'}
[ -s "$registry" ] || exit_error 1 "Non-existent or empty registry dump"


# Current ControlSet
read Current _ < <( grep -i '/Select/Current ' $registry | get_value )
[ "$Current" ] && [ $((Current)) -gt 0 ] || Current=1
Current=000$((Current))
ControlSet=ControlSet${Current: -3}
#dump $ControlSet


# node reduction
registry=$( mktemp )
registry=${registry:?$'\r'Error with temporay file$'\033[K'}
trap "rm -f $registry" EXIT
egrep -i '^\[.+/('$ControlSet'/Enum|MountedDevices)/.+ = .+' "$1" > $registry
[ -s $registry ] || exit_error 1 "Searched nodes not found"
# encoding correction
sed	-i -e 's/<E0>/à/g' -e 's/<E9>/é/g' $registry


# USB storage
while read UsbStorage
do
	Serial=${UsbStorage##*/}

	FirstTime=$( egrep "/$Serial/|#$Serial#" $registry | sort | head -1 )
	FirstTime=${FirstTime:1:19}

	DeviceDesc=$( grep "$UsbStorage" $registry | sort -r | grep -im1 "/DeviceDesc" )
	DeviceDesc=${DeviceDesc##*;}

	FriendlyName=$( grep -im1 "$UsbStorage/FriendlyName" $registry )
	LastTime=${FriendlyName:1:19}
	FriendlyName=${FriendlyName##* = }
	
	DosDevice=$( grep -i "/MountedDevices/" $registry | grep "$Serial" | grep -o 'DosDevices\\.:')
	DosDevice=${DosDevice: -2}

	UsbStorage=${UsbStorage%/*}
	UsbStorage=${UsbStorage##*/}
	UsbStorage=${UsbStorage%&Rev_*}
#	UsbStorage=${UsbStorage//&/ }
#	UsbStorage=${UsbStorage//Ven_/}
#	UsbStorage=${UsbStorage//Prod_/}

	echo $LastTime\
$'\t'$UsbStorage\
$'\t'$Serial\
$'\t'$FirstTime\
$'\t'$DeviceDesc\
$'\t'$FriendlyName\
$'\t'$DosDevice

done < <( egrep -o 'ControlSet001/Enum/USBSTOR/[^/]+/[^/]+' $registry | sort -u )
exit


# Mounted devices
while read -r Ymd Hms MountedDevice Extra
do
	Ymd=${Ymd:1}
	Hms=${Hms::-1}

	Extra=${Extra##*= }
	Extra=${Extra#*#}
	Extra=${Extra%#{*}
	Extra=${Extra/??,??,??,??,??,??,??,??,??,??,??,??/}
	Extra=${Extra/,??,??,??,??,??,??,??,??,??,??,??,??/}

	MountedDevice=${MountedDevice#*\\}
	MountedDevice=${MountedDevice//\\/ }

	Serial=${Extra##*#}
	[ "$Serial" != "$Extra" ]\
		&& Extra=$( grep -im1 "/$Serial/DeviceDesc " $registry | get_value )

	echo	$Ymd$'\t'\
$Hms$'\t'\
$MountedDevice$'\t'\
${Extra##*;}
done < <( grep -i '/MountedDevices/' $registry | grep -i DosDevices | sort -u )


# USB Vid Pid
last=0
while read -r Ymd Hms VidPidSerial
do
	Ymd=${Ymd:1}
	Hms=${Hms::-1}
	current=$( date --date="$Ymd $Hms" +%s )
	# display if more than 20 seconds elapse (first is negative)
	if (( (current-last)>20 ))
	then
		Extra=$( grep "$VidPidSerial/" $registry | grep -m1 '}/0004' | get_value )

		DeviceDesc=$( grep "$VidPidSerial/" $registry | grep -im1 '/DeviceDesc ' | get_value )
		DeviceDesc=${DeviceDesc##*;}

		Serial=${VidPidSerial##*/}

		VidPidSerial=${VidPidSerial%/*}
		VidPidSerial=${VidPidSerial##*/}

		shopt -s nocasematch
		[[ "$VidPidSerial" =~ VID_....\&PID_.... ]]\
			&& VidPidSerial=${VidPidSerial//&/ }\
			&& VidPidSerial=${VidPidSerial//VID_/VId: }\
			&& VidPidSerial=${VidPidSerial//PID_/PId: }
		shopt -u nocasematch

		echo	$Ymd$'\t'\
$Hms$'\t'\
$VidPidSerial$'\t'\
$Serial$'\t'\
$DeviceDesc$'\t'\
${Extra:--}
	fi
	last=$current
done < <( egrep -io '^.*/'$ControlSet'/Enum/USB/VID_....&PID_..../[^/]+' $registry | sort -u )

